name: publish

on:
  push:
    tags: [ v* ]
  workflow_dispatch:

jobs:
  build-publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup dotNET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.0.x
          7.0.x
          8.x
    - name: Get Version
      run: echo "VERSION=$(date '+%Y.%m%d')" >> $GITHUB_ENV
    - name: Build
      run: |
        dotnet pack --version-suffix ${{ env.VERSION }} -c Release -o out XCode/XCode.csproj
        dotnet pack --version-suffix ${{ env.VERSION }} -c Release -o out XCodeTool/XCodeTool.csproj
        dotnet pack --version-suffix ${{ env.VERSION }} -c Release -o out XCode.MySql/XCode.MySql.csproj
        dotnet pack --version-suffix ${{ env.VERSION }} -c Release -o out XCode.SQLite/XCode.SQLite.csproj
        dotnet pack --version-suffix ${{ env.VERSION }} -c Release -o out XCode.SqlServer/XCode.SqlServer.csproj
        dotnet pack --version-suffix ${{ env.VERSION }} -c Release -o out XCode.Oracle/XCode.Oracle.csproj
        dotnet pack --version-suffix ${{ env.VERSION }} -c Release -o out XCode.PostgreSQL/XCode.PostgreSQL.csproj
        dotnet pack --version-suffix ${{ env.VERSION }} -c Release -o out XCode.DaMeng/XCode.DaMeng.csproj
        dotnet pack --version-suffix ${{ env.VERSION }} -c Release -o out XCode.DB2/XCode.DB2.csproj
        dotnet pack --version-suffix ${{ env.VERSION }} -c Release -o out XCode.KingBase/XCode.KingBase.csproj
        dotnet pack --version-suffix ${{ env.VERSION }} -c Release -o out XCode.HighGo/XCode.HighGo.csproj
    - name: Publish
      run: |
        dotnet nuget push ./out/*.nupkg --skip-duplicate --source https://nuget.pkg.github.com/NewLifeX/index.json --api-key ${{ github.token }}
        dotnet nuget push ./out/*.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.nugetKey }}
