<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Model202509"
    targetNamespace="https://newlifex.com/Model202509.xsd"
    elementFormDefault="qualified"
    xmlns="https://newlifex.com/Model202509.xsd"
    xmlns:mstns="https://newlifex.com/Model202509.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
>
  <xs:annotation>
    <xs:documentation xml:lang="zh-cn">
      新生命Xml数据模型架构说明
    </xs:documentation>
  </xs:annotation>

  <xs:element name="EntityModel" type="EntityModelType"></xs:element>

  <xs:complexType name="EntityModelType">
    <xs:annotation>
      <xs:documentation xml:lang="zh-cn">
        实体模型，定义表结构以及代码生成配置
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Option" type="OptionType">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            代码生成配置项
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Tables" type="TablesType">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            数据表列表
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!--Option-start-->
  <xs:complexType name="OptionType">
    <xs:annotation>
      <xs:documentation xml:lang="zh-cn">
        代码生成配置项
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ClassNameTemplate" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            类名模板。其中{name}替换为Table.Name，如{name}Model/I{name}Dto
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DisplayNameTemplate" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            显示名模板。其中{displayName}替换为Table.DisplayName
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BaseClass" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            基类。可能包含基类和接口，其中{name}替换为Table.Name
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Namespace" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            实体类的命名空间
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Output" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            输出目录，绝对或相对地址，相对模型文件所在目录
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ChineseFileName" type="BooleanType">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            是否使用中文作为实体类文件名
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ModelNameForCopy" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            用于生成Copy函数的参数类型。例如{name}或I{name}
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="HasIModel" type="BooleanType">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            带有索引器。实现IModel接口
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Nullable" type="BooleanType">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            可为null上下文。生成String?等
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ConnName" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            实体类的数据库连接名
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ModelClass" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            简易模型类名称，如{name}Model。指定后将生成简易模型类，可用于数据传输
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ModelsOutput" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            模型类输出目录。默认当前目录的Models子目录
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ModelInterface" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            简易模型接口名称，如{name}Model。指定后将生成简易模型接口，可用于数据传输
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="InterfacesOutput" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            模型接口输出目录。默认当前目录的Interfaces子目录
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ModelNameForToModel" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            用户实体转为模型类的模型类。例如{name}或{name}DTO
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="NameFormat" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            数据库名称格式，可选 Default/Upper/Lower/Underline
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DisplayName" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            魔方区域显示名
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CubeOutput" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            魔方控制器输出目录
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--Option-end-->

  <xs:complexType name="TablesType">
    <xs:sequence>
      <xs:element name="Table" type="TableType" maxOccurs="unbounded" ></xs:element>
    </xs:sequence>
  </xs:complexType>

  <!--Table-start-->
  <xs:complexType name="TableType">
    <xs:annotation>
      <xs:documentation xml:lang="zh-cn">
        数据表。一个Table就是一个实体类，对应一张数据表。大数据表务必在表示数据时间的Column字段中指定DataScale。
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Columns" type="ColumnsType">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            属性/字段列表
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Indexes" type="IndexesType" minOccurs="0">
        <xs:annotation>
          <xs:documentation xml:lang="zh-cn">
            索引列表，并根据列名生成扩展查询方法
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          生成的实体类名，TableName对应数据库表名，TableName为空则用此属性作为表名
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="TableName" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          数据库表名，为空则默认为Name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="BaseType" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          基类
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Owner" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          所有者
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ConnName" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          连接名
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="DbType" type="DbTypeType">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          数据库类型
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="IsView" type="BooleanType">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          是否视图
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="DisplayName" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          显示名。如果有Description则使用Description，否则使用Name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Description" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          表描述
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="InsertOnly" type="BooleanType">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          仅插入数据，比如日志表、记录表、事件表等
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="UsingCache" type="BooleanType">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          使用缓存。生成Find/FindAll等方法时是否使用缓存
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ModelClass" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          简易模型类名称，如{name}Model。指定后将生成简易模型类，可用于数据传输
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ModelInterface" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          简易模型接口名称，如{name}Model。指定后将生成简易模型接口，可用于数据传输
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Output" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          模型表专用输出路径，相对于全局输出路径
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>

  </xs:complexType>
  <!--Table-end-->

  <xs:simpleType name="DbTypeType">
    <xs:annotation>
      <xs:documentation>
        数据库类型，生成数据库表的时候会针对数据库类型做处理，如果目标库刚好是该类型，则使用字段中的RawType
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Access" ></xs:enumeration>
      <xs:enumeration value="SqlServer" ></xs:enumeration>
      <xs:enumeration value="Oracle" ></xs:enumeration>
      <xs:enumeration value="MySql" ></xs:enumeration>
      <xs:enumeration value="SqlCe" ></xs:enumeration>
      <xs:enumeration value="SQLite" ></xs:enumeration>
      <xs:enumeration value="PostgreSQL" ></xs:enumeration>
      <xs:enumeration value="DaMeng" ></xs:enumeration>
      <xs:enumeration value="DB2" ></xs:enumeration>
      <xs:enumeration value="TDengine" ></xs:enumeration>
      <xs:enumeration value="KingBase" ></xs:enumeration>
      <xs:enumeration value="HighGo" ></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="ColumnsType">
    <xs:sequence>
      <xs:element name="Column" type="ColumnType" maxOccurs="unbounded"></xs:element>
    </xs:sequence>
  </xs:complexType>

  <!--Column-start-->
  <xs:complexType name="ColumnType">
    <xs:attribute name="Name" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          名称，对应实体类属性名，ColumnName为空时使用该名称
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ColumnName" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          字段名，对应数据库字段名，为空时使用Name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="DataType" type="DataTypeType">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          数据类型，对应C#的类型
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="RawType" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          原始数据类型，采用该值作为目标字段类型，而不是根据C#类型自动映射的字段类型，以期获得开发和生产的最佳兼容。
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Identity" type="BooleanType">
      <xs:annotation>
        <xs:documentation>
          自增标识。使用雪花Id时不要设置
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="PrimaryKey" type="BooleanType">
      <xs:annotation>
        <xs:documentation>
          主键。数据表主键，强烈建议使用单字段主键
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Master" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          主字段。主字段作为业务主要字段，代表当前数据行意义。例如名称和标题，实体对象ToString时使用该字段值
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Length" type="xs:int">
      <xs:annotation>
        <xs:documentation>
          长度。字符串默认长度50，此时隐藏Length；字符串-1表示无限大
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Precision" type="xs:int">
      <xs:annotation>
        <xs:documentation>
          精度。用于Double和Decimal类型
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Scale" type="xs:int">
      <xs:annotation>
        <xs:documentation>
          位数。小数位数，用于Double和Decimal类型
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Nullable" type="BooleanType">
      <xs:annotation>
        <xs:documentation>
          允许空。如果字段允许空，且插入时未指定值，则生成Insert语句时不包含该字段
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="DefaultValue" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          默认值。如果字段不允许空，且插入时未指定值，则生成Insert语句时使用该默认值
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="DisplayName" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          显示名。如果有Description则使用Description，否则使用Name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Description" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          说明
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Type" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          使用自定义类型，比如枚举，值可以是类型名也可以是命名空间+类型名
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Attribute" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          数据属性的特性，例如忽略序列化的XmlIgnore,ScriptIgnore,IgnoreDataMember，支持{name}替换属性名
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ItemType" type="ItemTypeType">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          元素类型。主要用于魔方页面显示
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ShowIn" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          显示选项。按List/Detail/AddForm/EditForm/Search五区三态划分显示与否或，如Auto,-Search全部自动但搜索不显示，等同写法为A|A|A|A|N或11110
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="DataScale" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          数据规模。time表示这是大数据单表的数据时间字段，timeShard:yyMMdd表示这是大数据多表的分表字段
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Map" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          映射。表间关联，用于生成扩展属性，例如 XCode.Membership.Area@Id@Path@AreaPath，又如 Tenant@Id@$
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Model" type="BooleanType">
      <xs:annotation>
        <xs:documentation>
          在简易接口和模型类中是否使用该属性
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Category" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          属性分类。主要用于魔方表单页面分组显示
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--Column-end-->

  <!--BooleanType-start-->
  <xs:simpleType name="BooleanType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="True" ></xs:enumeration>
      <xs:enumeration value="False" ></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!--BooleanType-end-->

  <!--DataType-start-->
  <xs:simpleType name="DataTypeType">
    <xs:annotation>
      <xs:documentation>
        属性数据类型，为简化模型，强烈建议使用常见类型
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Boolean" ></xs:enumeration>
      <xs:enumeration value="Byte" ></xs:enumeration>
      <xs:enumeration value="Int16" ></xs:enumeration>
      <xs:enumeration value="Int32" ></xs:enumeration>
      <xs:enumeration value="Int64" ></xs:enumeration>
      <xs:enumeration value="UInt64" ></xs:enumeration>
      <xs:enumeration value="Double" ></xs:enumeration>
      <xs:enumeration value="Decimal" ></xs:enumeration>
      <xs:enumeration value="DateTime" ></xs:enumeration>
      <xs:enumeration value="String" ></xs:enumeration>
      <xs:enumeration value="Byte[]" ></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!--DataType-end-->

  <!--ItemType-start-->
  <xs:simpleType name="ItemTypeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="image" ></xs:enumeration>
      <xs:enumeration value="file" ></xs:enumeration>
      <xs:enumeration value="file-zip" ></xs:enumeration>
      <xs:enumeration value="html" ></xs:enumeration>
      <xs:enumeration value="mail" ></xs:enumeration>
      <xs:enumeration value="mobile" ></xs:enumeration>
      <xs:enumeration value="phone" ></xs:enumeration>
      <xs:enumeration value="url" ></xs:enumeration>
      <xs:enumeration value="TimeSpan" ></xs:enumeration>
      <xs:enumeration value="GMK" ></xs:enumeration>
      <xs:enumeration value="date" ></xs:enumeration>
      <xs:enumeration value="percent" ></xs:enumeration>
      <xs:enumeration value="money" ></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!--ItemType-end-->

  <xs:complexType name="IndexesType">
    <xs:sequence>
      <xs:element name="Index" type="IndexType" maxOccurs="unbounded"></xs:element>
    </xs:sequence>
  </xs:complexType>


  <!--Index-start-->
  <xs:complexType name="IndexType">
    <xs:annotation>
      <xs:documentation xml:lang="zh-cn">
        索引，同时生成对应的拓展查询方法
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          索引名
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Columns" use="required">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          列名，英文逗号字符相隔，比如：ID,Name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Unique" type="BooleanType">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          是否唯一
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="PrimaryKey" type="BooleanType">
      <xs:annotation>
        <xs:documentation xml:lang="zh-cn">
          是否主键
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--Index-end-->

</xs:schema>
